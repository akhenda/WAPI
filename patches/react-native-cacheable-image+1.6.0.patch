patch-package
--- a/node_modules/react-native-cacheable-image/image.js
+++ b/node_modules/react-native-cacheable-image/image.js
@@ -1,4 +1,5 @@
 import React from 'react';
+import PropTypes from 'prop-types';
 import { Image, ActivityIndicator, NetInfo, Platform } from 'react-native';
 import RNFS, { DocumentDirectoryPath } from 'react-native-fs';
 import ResponsiveImage from 'react-native-responsive-image';
@@ -220,7 +221,7 @@ class CacheableImage extends React.Component {
 
     componentWillMount() {
         if (this.props.checkNetwork) {
-            NetInfo.isConnected.addEventListener('change', this._handleConnectivityChange);
+            NetInfo.isConnected.addEventListener('connectionChange', this._handleConnectivityChange);
             // componentWillUnmount unsets this._handleConnectivityChange in case the component unmounts before this fetch resolves
             NetInfo.isConnected.fetch().done(this._handleConnectivityChange);
         }
@@ -230,7 +231,7 @@ class CacheableImage extends React.Component {
 
     componentWillUnmount() {
         if (this.props.checkNetwork) {
-            NetInfo.isConnected.removeEventListener('change', this._handleConnectivityChange);
+            NetInfo.isConnected.removeEventListener('connectionChange', this._handleConnectivityChange);
             this._handleConnectivityChange = null;
         }
     
@@ -290,15 +291,15 @@ class CacheableImage extends React.Component {
 }
 
 CacheableImage.propTypes = {
-    activityIndicatorProps: React.PropTypes.object,
+    activityIndicatorProps: PropTypes.object,
     defaultSource: Image.propTypes.source,
-    useQueryParamsInCacheKey: React.PropTypes.oneOfType([
-        React.PropTypes.bool,
-        React.PropTypes.array
+    useQueryParamsInCacheKey: PropTypes.oneOfType([
+        PropTypes.bool,
+        PropTypes.array
     ]),
-    checkNetwork: React.PropTypes.bool,
-    networkAvailable: React.PropTypes.bool,
-    downloadInBackground: React.PropTypes.bool
+    checkNetwork: PropTypes.bool,
+    networkAvailable: PropTypes.bool,
+    downloadInBackground: PropTypes.bool
 };
 
 CacheableImage.defaultProps = {
